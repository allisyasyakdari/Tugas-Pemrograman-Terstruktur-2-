//strToInfix

#include <iostream>
using namespace std;
int main(){
}

//infixToPostfix

#include <iostream>
#include <stack>
#include <string>
#include <sstream>

using namespace std;

int precedence(char op) {
    if(op == '+' || op == '-') {
        return 1;
    } else if(op == '*' || op == '/' || op == '%') {
        return 2;
    }
    return 0;
}

string infixToPostfix(string infix) {
     stack<char> s;
     stringstream postfix;

     for(char c : infix) {
         if(isdigit(c)) {
             postfix << c;
             postfix << ' ';
         } else if(c == '(') {
            s.push(c);
         } else if(c == ')') {
             while(!s.empty() && s.top() != '(') {
                 postfix << s.top();
                 postfix << ' ';
                 s.pop();
             }
             s.pop();
         } else {
             while(!s.empty() && precedence(s.top()) >= precedence(c)) {
                 postfix << s.top();
                 postfix << ' ';
                 s.pop();
             }
             s.push(c);
           }
       }

       while(!s.empty()) {
           postfix << s.top();
           postfix << ' ';
          s.pop();
       }

       return postfix.str();
}

int main(){
    string infix;
    getlinr(cin, infix);

    string postfix = infixToPostfix(infix);
    cout << postfix << endl;

     return 0;
} 


\\evaluatePostfix

#include <iostream>
using namespace std;
int main(){
}
